
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDEQUAL BREAK CMP COLON COMMA CONTINUE DECREMENT DIVEQUAL DIVIDE DO ELSE ELSIF EQ EQUALS EXP FALSE FOR GE GT ID ID_LI ID_SC IF INCREMENT LAND LBRACE LBRACKET LE LNOT LOR LPAREN LSHIFT LSHIFTEQUAL LT MINUS MINUSEQUAL MODEQUAL MODULO NE NO NUMBER OR OREQUAL PERIOD PLUS PLUSEQUAL Q QQ QR QW QX RBRACE RBRACKET RETURN RPAREN RSHIFT RSHIFTEQUAL S SEMICOLON SEQ SGE SGT SLE SLT SNE SUB TERNARY TIMES TIMESEQUAL TR TRUE UNLESS UNTIL WHILE XOR XOREQUALinit : blockcode init\n        | function init\n        | blockcode\n        | function\n         blockcode : command\n        | command blockcode\n     command : interations\n        | if\n        | exp_assignment\n        | call\n        | RETURN return SEMICOLON\n        | BREAK SEMICOLON\n        | CONTINUE SEMICOLON\n    \n        if : IF LPAREN exp_condition RPAREN if_statement\n    \n        if_statement :  LBRACE blockcode RBRACE\n            | LBRACE blockcode RBRACE ELSE LBRACE blockcode RBRACE\n            | LBRACE blockcode RBRACE elsif\n    \n        elsif : ELSIF LPAREN exp_condition RPAREN LBRACE blockcode RBRACE\n        | ELSIF LPAREN exp_condition RPAREN LBRACE blockcode RBRACE elsif2\n    \n        elsif2 : elsif\n            | ELSE LBRACE blockcode RBRACE\n    \n       interations :  for\n       | dowhile\n       | while\n     for : FOR LPAREN for_assignments SEMICOLON exp_condition SEMICOLON for_assignments RPAREN LBRACE blockcode RBRACE for_assignments : exp_assignment\n        | exp_assignment COMMA for_assignments\n     dowhile :  DO LBRACE blockcode RBRACE WHILE LPAREN exp_condition RPAREN  while : WHILE LPAREN exp_condition RPAREN LBRACE blockcode RBRACE\n            | WHILE LPAREN exp_condition RPAREN LBRACE RBRACE\n     function : SUB ID LPAREN RPAREN LBRACE blockcode RBRACE\n        | SUB ID LPAREN function_assignments RPAREN LBRACE blockcode RBRACE\n     function_assignments : exp_assignment\n        | exp_assignment COMMA function_assignments\n    \n    exp_condition : exp_condition GT exp_condition_2\n        | exp_condition LT exp_condition_2\n        | exp_condition_2\n    \n    exp_condition_2 : exp_condition_2 GE exp_condition_3\n        | exp_condition_2 LE exp_condition_3\n        | exp_condition_3\n    \n    exp_condition_3 : exp_condition_3 EQ exp_condition_4\n        | exp_condition_3 NE exp_condition_4\n        | exp_condition_4\n    \n    exp_condition_4 : exp_condition_4 SGT exp_condition_5\n        | exp_condition_4 SLT exp_condition_5\n        | exp_condition_5\n    \n    exp_condition_5 : exp_condition_5 SGE exp_condition_6\n        | exp_condition_5 SLE exp_condition_6\n        | exp_condition_6\n    \n    exp_condition_6 : exp_condition_6 SEQ exp_condition_7\n        | exp_condition_6 SNE exp_condition_7\n        | exp_condition_7\n    \n    exp_condition_7 : exp_condition_7 CMP exp_condition_8\n        | exp_condition_8\n    \n    exp_condition_8 : attcond\n        | LPAREN exp_condition RPAREN logic exp_condition_logic\n    \n        exp_condition_logic : LPAREN exp_condition RPAREN\n        | LPAREN exp_condition RPAREN logic LPAREN exp_condition RPAREN\n    \n        logic : LAND\n            | LOR\n            | LNOT\n     exp_assignment : ID_SC EQUALS arithmetic\n        | ID_LI EQUALS arithmetic\n        | ID_SC\n        | ID_LI\n        | INCREMENT ID_SC\n        | DECREMENT ID_SC\n        | ID_SC INCREMENT\n        | ID_SC DECREMENT\n    \n        arithmetic : exp\n    \n        exp : exp PLUS exp1\n            | exp MINUS exp1\n            | exp1\n    \n        exp1 : exp1 TIMES exp2\n            | exp1 DIVIDE exp2\n            | exp1 MODULO exp2\n            | exp2\n    \n    exp2 : exp3 XOR exp2\n        | exp3\n    \n    exp3 : LPAREN arithmetic RPAREN\n        | NUMBER\n        | exp_assignment\n        | exp_condition\n        | call\n        | exp\n        | TRUE\n        | FALSE\n     attcond : exp_assignment\n        | NUMBER\n        | TRUE\n        | FALSE\n    \n        call : ID LPAREN RPAREN\n            | ID LPAREN function_assignments RPAREN\n     return : attcond\n        | arithmetic\n     '
    
_lr_action_items = {'SUB':([0,2,3,4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,55,56,58,59,64,67,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,145,154,159,160,163,166,167,168,170,173,183,185,186,189,190,191,195,],[5,5,5,-5,-7,-8,-9,-10,-22,-23,-24,-64,-65,-6,-70,-73,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-12,-13,-68,-69,-66,-67,-92,-11,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,-14,-56,-30,-31,-15,-29,-32,-57,-17,-28,-16,-25,-58,-18,-19,-20,-21,]),'RETURN':([0,2,3,4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,55,56,58,59,61,64,67,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,138,145,146,150,152,154,159,160,163,166,167,168,170,173,175,177,183,185,186,187,189,190,191,193,195,],[11,11,11,11,-7,-8,-9,-10,-22,-23,-24,-64,-65,-6,-70,-73,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-12,-13,-68,-69,-66,-67,11,-92,-11,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,11,-14,11,11,11,-56,-30,-31,-15,-29,-32,-57,-17,-28,11,11,-16,-25,-58,11,-18,-19,-20,11,-21,]),'BREAK':([0,2,3,4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,55,56,58,59,61,64,67,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,138,145,146,150,152,154,159,160,163,166,167,168,170,173,175,177,183,185,186,187,189,190,191,193,195,],[12,12,12,12,-7,-8,-9,-10,-22,-23,-24,-64,-65,-6,-70,-73,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-12,-13,-68,-69,-66,-67,12,-92,-11,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,12,-14,12,12,12,-56,-30,-31,-15,-29,-32,-57,-17,-28,12,12,-16,-25,-58,12,-18,-19,-20,12,-21,]),'CONTINUE':([0,2,3,4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,55,56,58,59,61,64,67,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,138,145,146,150,152,154,159,160,163,166,167,168,170,173,175,177,183,185,186,187,189,190,191,193,195,],[13,13,13,13,-7,-8,-9,-10,-22,-23,-24,-64,-65,-6,-70,-73,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-12,-13,-68,-69,-66,-67,13,-92,-11,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,13,-14,13,13,13,-56,-30,-31,-15,-29,-32,-57,-17,-28,13,13,-16,-25,-58,13,-18,-19,-20,13,-21,]),'IF':([0,2,3,4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,55,56,58,59,61,64,67,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,138,145,146,150,152,154,159,160,163,166,167,168,170,173,175,177,183,185,186,187,189,190,191,193,195,],[17,17,17,17,-7,-8,-9,-10,-22,-23,-24,-64,-65,-6,-70,-73,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-12,-13,-68,-69,-66,-67,17,-92,-11,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,17,-14,17,17,17,-56,-30,-31,-15,-29,-32,-57,-17,-28,17,17,-16,-25,-58,17,-18,-19,-20,17,-21,]),'ID_SC':([0,2,3,4,7,8,9,10,11,14,15,16,18,19,20,21,27,29,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,138,145,146,150,152,153,154,156,157,159,160,163,166,167,168,170,173,175,176,177,178,183,185,186,187,189,190,191,193,195,],[18,18,18,18,-7,-8,-9,-10,18,-22,-23,-24,-64,-65,58,59,-6,18,-70,-73,-77,-79,18,-83,-84,-37,-40,-43,-46,-49,-52,-54,-12,-13,18,18,-68,-69,18,-66,-67,18,18,18,18,-92,-11,18,18,18,18,18,18,-81,-82,-86,-87,-55,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-88,-89,-90,-91,-62,-63,-93,18,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,18,18,18,-14,18,18,18,18,-56,18,18,-30,-31,-15,-29,-32,-57,-17,-28,18,18,18,18,-16,-25,-58,18,-18,-19,-20,18,-21,]),'ID_LI':([0,2,3,4,7,8,9,10,11,14,15,16,18,19,27,29,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,138,145,146,150,152,153,154,156,157,159,160,163,166,167,168,170,173,175,176,177,178,183,185,186,187,189,190,191,193,195,],[19,19,19,19,-7,-8,-9,-10,19,-22,-23,-24,-64,-65,-6,19,-70,-73,-77,-79,19,-83,-84,-37,-40,-43,-46,-49,-52,-54,-12,-13,19,19,-68,-69,19,-66,-67,19,19,19,19,-92,-11,19,19,19,19,19,19,-81,-82,-86,-87,-55,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-88,-89,-90,-91,-62,-63,-93,19,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,19,19,19,-14,19,19,19,19,-56,19,19,-30,-31,-15,-29,-32,-57,-17,-28,19,19,19,19,-16,-25,-58,19,-18,-19,-20,19,-21,]),'INCREMENT':([0,2,3,4,7,8,9,10,11,14,15,16,18,19,27,29,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,138,145,146,150,152,153,154,156,157,159,160,163,166,167,168,170,173,175,176,177,178,183,185,186,187,189,190,191,193,195,],[20,20,20,20,-7,-8,-9,-10,20,-22,-23,-24,55,-65,-6,20,-70,-73,-77,-79,20,-83,-84,-37,-40,-43,-46,-49,-52,-54,-12,-13,20,20,-68,-69,20,-66,-67,20,20,20,20,-92,-11,20,20,20,20,20,20,-81,-82,-86,-87,-55,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-88,-89,-90,-91,-62,-63,-93,20,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,20,20,20,-14,20,20,20,20,-56,20,20,-30,-31,-15,-29,-32,-57,-17,-28,20,20,20,20,-16,-25,-58,20,-18,-19,-20,20,-21,]),'DECREMENT':([0,2,3,4,7,8,9,10,11,14,15,16,18,19,27,29,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,138,145,146,150,152,153,154,156,157,159,160,163,166,167,168,170,173,175,176,177,178,183,185,186,187,189,190,191,193,195,],[21,21,21,21,-7,-8,-9,-10,21,-22,-23,-24,56,-65,-6,21,-70,-73,-77,-79,21,-83,-84,-37,-40,-43,-46,-49,-52,-54,-12,-13,21,21,-68,-69,21,-66,-67,21,21,21,21,-92,-11,21,21,21,21,21,21,-81,-82,-86,-87,-55,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-88,-89,-90,-91,-62,-63,-93,21,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,21,21,21,-14,21,21,21,21,-56,21,21,-30,-31,-15,-29,-32,-57,-17,-28,21,21,21,21,-16,-25,-58,21,-18,-19,-20,21,-21,]),'ID':([0,2,3,4,5,7,8,9,10,11,14,15,16,18,19,27,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,61,64,67,68,69,70,71,72,73,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,138,145,146,150,152,154,159,160,163,166,167,168,170,173,175,177,183,185,186,187,189,190,191,193,195,],[6,6,6,6,28,-7,-8,-9,-10,6,-22,-23,-24,-64,-65,-6,-70,-73,-77,-79,6,-83,-84,-37,-40,-43,-46,-49,-52,-54,-12,-13,6,-68,-69,6,-66,-67,6,-92,-11,6,6,6,6,6,6,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,6,-14,6,6,6,-56,-30,-31,-15,-29,-32,-57,-17,-28,6,6,-16,-25,-58,6,-18,-19,-20,6,-21,]),'FOR':([0,2,3,4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,55,56,58,59,61,64,67,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,138,145,146,150,152,154,159,160,163,166,167,168,170,173,175,177,183,185,186,187,189,190,191,193,195,],[22,22,22,22,-7,-8,-9,-10,-22,-23,-24,-64,-65,-6,-70,-73,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-12,-13,-68,-69,-66,-67,22,-92,-11,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,22,-14,22,22,22,-56,-30,-31,-15,-29,-32,-57,-17,-28,22,22,-16,-25,-58,22,-18,-19,-20,22,-21,]),'DO':([0,2,3,4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,55,56,58,59,61,64,67,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,138,145,146,150,152,154,159,160,163,166,167,168,170,173,175,177,183,185,186,187,189,190,191,193,195,],[23,23,23,23,-7,-8,-9,-10,-22,-23,-24,-64,-65,-6,-70,-73,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-12,-13,-68,-69,-66,-67,23,-92,-11,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,23,-14,23,23,23,-56,-30,-31,-15,-29,-32,-57,-17,-28,23,23,-16,-25,-58,23,-18,-19,-20,23,-21,]),'WHILE':([0,2,3,4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,55,56,58,59,61,64,67,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,136,138,145,146,150,152,154,159,160,163,166,167,168,170,173,175,177,183,185,186,187,189,190,191,193,195,],[24,24,24,24,-7,-8,-9,-10,-22,-23,-24,-64,-65,-6,-70,-73,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-12,-13,-68,-69,-66,-67,24,-92,-11,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,149,24,-14,24,24,24,-56,-30,-31,-15,-29,-32,-57,-17,-28,24,24,-16,-25,-58,24,-18,-19,-20,24,-21,]),'$end':([1,2,3,4,7,8,9,10,14,15,16,18,19,25,26,27,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,55,56,58,59,64,67,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,145,154,159,160,163,166,167,168,170,173,183,185,186,189,190,191,195,],[0,-3,-4,-5,-7,-8,-9,-10,-22,-23,-24,-64,-65,-1,-2,-6,-70,-73,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-12,-13,-68,-69,-66,-67,-92,-11,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,-14,-56,-30,-31,-15,-29,-32,-57,-17,-28,-16,-25,-58,-18,-19,-20,-21,]),'RBRACE':([4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,55,56,58,59,64,67,76,77,78,79,80,96,97,98,99,100,101,104,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,145,150,151,154,155,158,159,161,163,166,168,170,173,179,181,183,185,186,188,189,190,191,194,195,],[-5,-7,-8,-9,-10,-22,-23,-24,-64,-65,-6,-70,-73,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-12,-13,-68,-69,-66,-67,-92,-11,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,136,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,-14,159,160,-56,163,166,-30,167,-15,-29,-57,-17,-28,183,185,-16,-25,-58,189,-18,-19,-20,195,-21,]),'LPAREN':([6,11,17,22,24,28,41,53,54,57,62,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,91,92,93,94,134,141,142,143,144,149,153,157,171,174,176,178,],[29,41,53,60,62,63,41,94,41,41,94,41,41,41,41,41,41,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,153,-59,-60,-61,157,94,94,176,178,94,94,]),'NUMBER':([11,41,53,54,57,62,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,91,92,93,94,134,153,157,176,178,],[34,76,97,76,76,97,76,76,76,76,76,76,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'TRUE':([11,41,53,54,57,62,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,91,92,93,94,134,153,157,176,178,],[35,78,98,78,78,98,78,78,78,78,78,78,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'FALSE':([11,41,53,54,57,62,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,91,92,93,94,134,153,157,176,178,],[36,79,99,79,79,99,79,79,79,79,79,79,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'SEMICOLON':([12,13,18,19,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,76,77,78,79,80,96,97,98,99,100,101,102,103,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,147,148,154,168,186,],[51,52,-64,-65,67,-55,-95,-82,-81,-86,-87,-70,-73,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-68,-69,-66,-67,-92,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,134,-26,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,156,-27,-56,-57,-58,]),'EQUALS':([18,19,],[54,57,]),'CMP':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-88,-89,-90,-91,-70,-73,-77,-79,-83,-84,-37,-40,-43,-46,-49,93,-54,-68,-69,-66,-67,-92,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,93,93,-53,-56,-57,-58,]),'SEQ':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-88,-89,-90,-91,-70,-73,-77,-79,-83,-84,-37,-40,-43,-46,91,-52,-54,-68,-69,-66,-67,-92,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,91,91,-50,-51,-53,-56,-57,-58,]),'SNE':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-88,-89,-90,-91,-70,-73,-77,-79,-83,-84,-37,-40,-43,-46,92,-52,-54,-68,-69,-66,-67,-92,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,92,92,-50,-51,-53,-56,-57,-58,]),'SGE':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-88,-89,-90,-91,-70,-73,-77,-79,-83,-84,-37,-40,-43,89,-49,-52,-54,-68,-69,-66,-67,-92,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,89,89,-47,-48,-50,-51,-53,-56,-57,-58,]),'SLE':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-88,-89,-90,-91,-70,-73,-77,-79,-83,-84,-37,-40,-43,90,-49,-52,-54,-68,-69,-66,-67,-92,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,90,90,-47,-48,-50,-51,-53,-56,-57,-58,]),'SGT':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-88,-89,-90,-91,-70,-73,-77,-79,-83,-84,-37,-40,87,-46,-49,-52,-54,-68,-69,-66,-67,-92,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,87,87,-44,-45,-47,-48,-50,-51,-53,-56,-57,-58,]),'SLT':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-88,-89,-90,-91,-70,-73,-77,-79,-83,-84,-37,-40,88,-46,-49,-52,-54,-68,-69,-66,-67,-92,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,88,88,-44,-45,-47,-48,-50,-51,-53,-56,-57,-58,]),'EQ':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-88,-89,-90,-91,-70,-73,-77,-79,-83,-84,-37,85,-43,-46,-49,-52,-54,-68,-69,-66,-67,-92,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,85,85,-41,-42,-44,-45,-47,-48,-50,-51,-53,-56,-57,-58,]),'NE':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-88,-89,-90,-91,-70,-73,-77,-79,-83,-84,-37,86,-43,-46,-49,-52,-54,-68,-69,-66,-67,-92,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,86,86,-41,-42,-44,-45,-47,-48,-50,-51,-53,-56,-57,-58,]),'GE':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-88,-89,-90,-91,-70,-73,-77,-79,-83,-84,83,-40,-43,-46,-49,-52,-54,-68,-69,-66,-67,-92,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,83,83,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,-56,-57,-58,]),'LE':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-88,-89,-90,-91,-70,-73,-77,-79,-83,-84,84,-40,-43,-46,-49,-52,-54,-68,-69,-66,-67,-92,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,84,84,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,-56,-57,-58,]),'GT':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,75,76,77,78,79,80,95,96,97,98,99,100,101,105,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,147,154,162,165,168,180,182,186,],[-64,-65,-55,-88,-89,-90,-91,-70,-73,-77,-79,81,-84,-37,-40,-43,-46,-49,-52,-54,-68,-69,-66,-67,-92,81,-81,-82,-86,-87,-55,81,-88,-89,-90,-91,-62,-63,81,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,81,81,-56,81,81,-57,81,81,-58,]),'LT':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,75,76,77,78,79,80,95,96,97,98,99,100,101,105,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,147,154,162,165,168,180,182,186,],[-64,-65,-55,-88,-89,-90,-91,-70,-73,-77,-79,82,-84,-37,-40,-43,-46,-49,-52,-54,-68,-69,-66,-67,-92,82,-81,-82,-86,-87,-55,82,-88,-89,-90,-91,-62,-63,82,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,82,82,-56,82,82,-57,82,82,-58,]),'XOR':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,75,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-82,-81,-86,-87,-70,-73,-77,73,-83,-84,-37,-40,-43,-46,-49,-52,-54,-68,-69,-66,-67,-92,-83,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,-56,-57,-58,]),'TIMES':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,75,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-82,-81,-86,-87,-70,70,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-68,-69,-66,-67,-92,-83,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,70,70,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,-56,-57,-58,]),'DIVIDE':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,75,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-82,-81,-86,-87,-70,71,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-68,-69,-66,-67,-92,-83,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,71,71,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,-56,-57,-58,]),'MODULO':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,75,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-82,-81,-86,-87,-70,72,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-68,-69,-66,-67,-92,-83,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,-85,72,72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,-56,-57,-58,]),'PLUS':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,75,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-82,-81,-86,-87,68,-73,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-68,-69,-66,-67,-92,-83,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,68,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,-56,-57,-58,]),'MINUS':([18,19,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,75,76,77,78,79,80,96,97,98,99,100,101,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-55,-82,-81,-86,-87,69,-73,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-68,-69,-66,-67,-92,-83,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,-93,69,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,-56,-57,-58,]),'COMMA':([18,19,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,64,66,76,77,78,79,80,96,97,98,99,100,101,103,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,154,168,186,],[-64,-65,-70,-73,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-68,-69,-66,-67,-92,109,-81,-82,-86,-87,-55,-88,-89,-90,-91,-62,-63,135,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,-56,-57,-58,]),'RPAREN':([18,19,29,37,38,39,40,42,43,44,45,46,47,48,49,50,55,56,58,59,63,64,65,66,74,75,76,77,78,79,80,95,96,97,98,99,100,101,103,105,107,108,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,140,148,154,162,164,165,168,180,182,186,],[-64,-65,64,-70,-73,-77,-79,-83,-84,-37,-40,-43,-46,-49,-52,-54,-68,-69,-66,-67,106,-92,108,-33,117,118,-81,-82,-86,-87,-55,133,-88,-89,-90,-91,-62,-63,-26,137,139,-93,-85,-71,-72,-74,-75,-76,-77,-80,-35,-36,-38,-39,-41,-42,-44,-45,-47,-48,-50,-51,-53,118,-34,-27,-56,168,172,173,-57,184,186,-58,]),'LBRACE':([23,106,133,137,139,169,172,184,192,],[61,138,146,150,152,175,177,187,193,]),'LAND':([118,168,],[142,142,]),'LOR':([118,168,],[143,143,]),'LNOT':([118,168,],[144,144,]),'ELSE':([163,189,],[169,192,]),'ELSIF':([163,189,],[171,171,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,2,3,],[1,25,26,]),'blockcode':([0,2,3,4,61,138,146,150,152,175,177,187,193,],[2,2,2,27,104,151,155,158,161,179,181,188,194,]),'function':([0,2,3,],[3,3,3,]),'command':([0,2,3,4,61,138,146,150,152,175,177,187,193,],[4,4,4,4,4,4,4,4,4,4,4,4,4,]),'interations':([0,2,3,4,61,138,146,150,152,175,177,187,193,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'if':([0,2,3,4,61,138,146,150,152,175,177,187,193,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'exp_assignment':([0,2,3,4,11,29,41,53,54,57,60,61,62,63,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,91,92,93,94,109,134,135,138,146,150,152,153,156,157,175,176,177,178,187,193,],[9,9,9,9,33,66,77,96,77,77,103,9,96,66,77,77,77,77,77,77,96,96,96,96,96,96,96,96,96,96,96,96,96,96,66,96,103,9,9,9,9,96,103,96,9,96,9,96,9,9,]),'call':([0,2,3,4,11,41,54,57,61,68,69,70,71,72,73,138,146,150,152,175,177,187,193,],[10,10,10,10,43,43,43,43,10,43,43,43,43,43,43,10,10,10,10,10,10,10,10,]),'for':([0,2,3,4,61,138,146,150,152,175,177,187,193,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'dowhile':([0,2,3,4,61,138,146,150,152,175,177,187,193,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'while':([0,2,3,4,61,138,146,150,152,175,177,187,193,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'return':([11,],[30,]),'attcond':([11,41,53,54,57,62,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,91,92,93,94,134,153,157,176,178,],[31,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'arithmetic':([11,41,54,57,],[32,74,100,101,]),'exp':([11,41,54,57,68,69,70,71,72,73,],[37,37,37,37,110,110,110,110,110,110,]),'exp1':([11,41,54,57,68,69,70,71,72,73,],[38,38,38,38,111,112,38,38,38,38,]),'exp2':([11,41,54,57,68,69,70,71,72,73,],[39,39,39,39,39,39,113,114,115,116,]),'exp3':([11,41,54,57,68,69,70,71,72,73,],[40,40,40,40,40,40,40,40,40,40,]),'exp_condition':([11,41,53,54,57,62,68,69,70,71,72,73,94,134,153,157,176,178,],[42,75,95,42,42,105,42,42,42,42,42,42,132,147,162,165,180,182,]),'exp_condition_2':([11,41,53,54,57,62,68,69,70,71,72,73,81,82,94,134,153,157,176,178,],[44,44,44,44,44,44,44,44,44,44,44,44,119,120,44,44,44,44,44,44,]),'exp_condition_3':([11,41,53,54,57,62,68,69,70,71,72,73,81,82,83,84,94,134,153,157,176,178,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,121,122,45,45,45,45,45,45,]),'exp_condition_4':([11,41,53,54,57,62,68,69,70,71,72,73,81,82,83,84,85,86,94,134,153,157,176,178,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,123,124,46,46,46,46,46,46,]),'exp_condition_5':([11,41,53,54,57,62,68,69,70,71,72,73,81,82,83,84,85,86,87,88,94,134,153,157,176,178,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,125,126,47,47,47,47,47,47,]),'exp_condition_6':([11,41,53,54,57,62,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,94,134,153,157,176,178,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,127,128,48,48,48,48,48,48,]),'exp_condition_7':([11,41,53,54,57,62,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,91,92,94,134,153,157,176,178,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,129,130,49,49,49,49,49,49,]),'exp_condition_8':([11,41,53,54,57,62,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,91,92,93,94,134,153,157,176,178,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,131,50,50,50,50,50,50,]),'function_assignments':([29,63,109,],[65,107,140,]),'for_assignments':([60,135,156,],[102,148,164,]),'logic':([118,168,],[141,174,]),'if_statement':([133,],[145,]),'exp_condition_logic':([141,],[154,]),'elsif':([163,189,],[170,191,]),'elsif2':([189,],[190,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> blockcode init','init',2,'p_init','syntactic.py',7),
  ('init -> function init','init',2,'p_init','syntactic.py',8),
  ('init -> blockcode','init',1,'p_init','syntactic.py',9),
  ('init -> function','init',1,'p_init','syntactic.py',10),
  ('blockcode -> command','blockcode',1,'p_blockcode','syntactic.py',15),
  ('blockcode -> command blockcode','blockcode',2,'p_blockcode','syntactic.py',16),
  ('command -> interations','command',1,'p_command','syntactic.py',21),
  ('command -> if','command',1,'p_command','syntactic.py',22),
  ('command -> exp_assignment','command',1,'p_command','syntactic.py',23),
  ('command -> call','command',1,'p_command','syntactic.py',24),
  ('command -> RETURN return SEMICOLON','command',3,'p_command','syntactic.py',25),
  ('command -> BREAK SEMICOLON','command',2,'p_command','syntactic.py',26),
  ('command -> CONTINUE SEMICOLON','command',2,'p_command','syntactic.py',27),
  ('if -> IF LPAREN exp_condition RPAREN if_statement','if',5,'p_if','syntactic.py',33),
  ('if_statement -> LBRACE blockcode RBRACE','if_statement',3,'p_if_statement','syntactic.py',40),
  ('if_statement -> LBRACE blockcode RBRACE ELSE LBRACE blockcode RBRACE','if_statement',7,'p_if_statement','syntactic.py',41),
  ('if_statement -> LBRACE blockcode RBRACE elsif','if_statement',4,'p_if_statement','syntactic.py',42),
  ('elsif -> ELSIF LPAREN exp_condition RPAREN LBRACE blockcode RBRACE','elsif',7,'p_elsif','syntactic.py',48),
  ('elsif -> ELSIF LPAREN exp_condition RPAREN LBRACE blockcode RBRACE elsif2','elsif',8,'p_elsif','syntactic.py',49),
  ('elsif2 -> elsif','elsif2',1,'p_elsif2','syntactic.py',55),
  ('elsif2 -> ELSE LBRACE blockcode RBRACE','elsif2',4,'p_elsif2','syntactic.py',56),
  ('interations -> for','interations',1,'p_interations','syntactic.py',62),
  ('interations -> dowhile','interations',1,'p_interations','syntactic.py',63),
  ('interations -> while','interations',1,'p_interations','syntactic.py',64),
  ('for -> FOR LPAREN for_assignments SEMICOLON exp_condition SEMICOLON for_assignments RPAREN LBRACE blockcode RBRACE','for',11,'p_for','syntactic.py',69),
  ('for_assignments -> exp_assignment','for_assignments',1,'p_for_assignments','syntactic.py',73),
  ('for_assignments -> exp_assignment COMMA for_assignments','for_assignments',3,'p_for_assignments','syntactic.py',74),
  ('dowhile -> DO LBRACE blockcode RBRACE WHILE LPAREN exp_condition RPAREN','dowhile',8,'p_dowhile','syntactic.py',79),
  ('while -> WHILE LPAREN exp_condition RPAREN LBRACE blockcode RBRACE','while',7,'p_while','syntactic.py',83),
  ('while -> WHILE LPAREN exp_condition RPAREN LBRACE RBRACE','while',6,'p_while','syntactic.py',84),
  ('function -> SUB ID LPAREN RPAREN LBRACE blockcode RBRACE','function',7,'p_function','syntactic.py',89),
  ('function -> SUB ID LPAREN function_assignments RPAREN LBRACE blockcode RBRACE','function',8,'p_function','syntactic.py',90),
  ('function_assignments -> exp_assignment','function_assignments',1,'p_function_assignments','syntactic.py',95),
  ('function_assignments -> exp_assignment COMMA function_assignments','function_assignments',3,'p_function_assignments','syntactic.py',96),
  ('exp_condition -> exp_condition GT exp_condition_2','exp_condition',3,'p_exp_condition','syntactic.py',102),
  ('exp_condition -> exp_condition LT exp_condition_2','exp_condition',3,'p_exp_condition','syntactic.py',103),
  ('exp_condition -> exp_condition_2','exp_condition',1,'p_exp_condition','syntactic.py',104),
  ('exp_condition_2 -> exp_condition_2 GE exp_condition_3','exp_condition_2',3,'p_exp_condition_2','syntactic.py',110),
  ('exp_condition_2 -> exp_condition_2 LE exp_condition_3','exp_condition_2',3,'p_exp_condition_2','syntactic.py',111),
  ('exp_condition_2 -> exp_condition_3','exp_condition_2',1,'p_exp_condition_2','syntactic.py',112),
  ('exp_condition_3 -> exp_condition_3 EQ exp_condition_4','exp_condition_3',3,'p_exp_condition_3','syntactic.py',118),
  ('exp_condition_3 -> exp_condition_3 NE exp_condition_4','exp_condition_3',3,'p_exp_condition_3','syntactic.py',119),
  ('exp_condition_3 -> exp_condition_4','exp_condition_3',1,'p_exp_condition_3','syntactic.py',120),
  ('exp_condition_4 -> exp_condition_4 SGT exp_condition_5','exp_condition_4',3,'p_exp_condition_4','syntactic.py',126),
  ('exp_condition_4 -> exp_condition_4 SLT exp_condition_5','exp_condition_4',3,'p_exp_condition_4','syntactic.py',127),
  ('exp_condition_4 -> exp_condition_5','exp_condition_4',1,'p_exp_condition_4','syntactic.py',128),
  ('exp_condition_5 -> exp_condition_5 SGE exp_condition_6','exp_condition_5',3,'p_exp_condition_5','syntactic.py',134),
  ('exp_condition_5 -> exp_condition_5 SLE exp_condition_6','exp_condition_5',3,'p_exp_condition_5','syntactic.py',135),
  ('exp_condition_5 -> exp_condition_6','exp_condition_5',1,'p_exp_condition_5','syntactic.py',136),
  ('exp_condition_6 -> exp_condition_6 SEQ exp_condition_7','exp_condition_6',3,'p_exp_condition_6','syntactic.py',142),
  ('exp_condition_6 -> exp_condition_6 SNE exp_condition_7','exp_condition_6',3,'p_exp_condition_6','syntactic.py',143),
  ('exp_condition_6 -> exp_condition_7','exp_condition_6',1,'p_exp_condition_6','syntactic.py',144),
  ('exp_condition_7 -> exp_condition_7 CMP exp_condition_8','exp_condition_7',3,'p_exp_condition_7','syntactic.py',150),
  ('exp_condition_7 -> exp_condition_8','exp_condition_7',1,'p_exp_condition_7','syntactic.py',151),
  ('exp_condition_8 -> attcond','exp_condition_8',1,'p_exp_condition_8','syntactic.py',156),
  ('exp_condition_8 -> LPAREN exp_condition RPAREN logic exp_condition_logic','exp_condition_8',5,'p_exp_condition_8','syntactic.py',157),
  ('exp_condition_logic -> LPAREN exp_condition RPAREN','exp_condition_logic',3,'p_exp_condition_logic','syntactic.py',162),
  ('exp_condition_logic -> LPAREN exp_condition RPAREN logic LPAREN exp_condition RPAREN','exp_condition_logic',7,'p_exp_condition_logic','syntactic.py',163),
  ('logic -> LAND','logic',1,'p_logic','syntactic.py',169),
  ('logic -> LOR','logic',1,'p_logic','syntactic.py',170),
  ('logic -> LNOT','logic',1,'p_logic','syntactic.py',171),
  ('exp_assignment -> ID_SC EQUALS arithmetic','exp_assignment',3,'p_exp_assignment','syntactic.py',176),
  ('exp_assignment -> ID_LI EQUALS arithmetic','exp_assignment',3,'p_exp_assignment','syntactic.py',177),
  ('exp_assignment -> ID_SC','exp_assignment',1,'p_exp_assignment','syntactic.py',178),
  ('exp_assignment -> ID_LI','exp_assignment',1,'p_exp_assignment','syntactic.py',179),
  ('exp_assignment -> INCREMENT ID_SC','exp_assignment',2,'p_exp_assignment','syntactic.py',180),
  ('exp_assignment -> DECREMENT ID_SC','exp_assignment',2,'p_exp_assignment','syntactic.py',181),
  ('exp_assignment -> ID_SC INCREMENT','exp_assignment',2,'p_exp_assignment','syntactic.py',182),
  ('exp_assignment -> ID_SC DECREMENT','exp_assignment',2,'p_exp_assignment','syntactic.py',183),
  ('arithmetic -> exp','arithmetic',1,'p_arithmetic','syntactic.py',189),
  ('exp -> exp PLUS exp1','exp',3,'p_exp','syntactic.py',195),
  ('exp -> exp MINUS exp1','exp',3,'p_exp','syntactic.py',196),
  ('exp -> exp1','exp',1,'p_exp','syntactic.py',197),
  ('exp1 -> exp1 TIMES exp2','exp1',3,'p_exp1','syntactic.py',203),
  ('exp1 -> exp1 DIVIDE exp2','exp1',3,'p_exp1','syntactic.py',204),
  ('exp1 -> exp1 MODULO exp2','exp1',3,'p_exp1','syntactic.py',205),
  ('exp1 -> exp2','exp1',1,'p_exp1','syntactic.py',206),
  ('exp2 -> exp3 XOR exp2','exp2',3,'p_exp2','syntactic.py',212),
  ('exp2 -> exp3','exp2',1,'p_exp2','syntactic.py',213),
  ('exp3 -> LPAREN arithmetic RPAREN','exp3',3,'p_exp3','syntactic.py',219),
  ('exp3 -> NUMBER','exp3',1,'p_exp3','syntactic.py',220),
  ('exp3 -> exp_assignment','exp3',1,'p_exp3','syntactic.py',221),
  ('exp3 -> exp_condition','exp3',1,'p_exp3','syntactic.py',222),
  ('exp3 -> call','exp3',1,'p_exp3','syntactic.py',223),
  ('exp3 -> exp','exp3',1,'p_exp3','syntactic.py',224),
  ('exp3 -> TRUE','exp3',1,'p_exp3','syntactic.py',225),
  ('exp3 -> FALSE','exp3',1,'p_exp3','syntactic.py',226),
  ('attcond -> exp_assignment','attcond',1,'p_attcond','syntactic.py',231),
  ('attcond -> NUMBER','attcond',1,'p_attcond','syntactic.py',232),
  ('attcond -> TRUE','attcond',1,'p_attcond','syntactic.py',233),
  ('attcond -> FALSE','attcond',1,'p_attcond','syntactic.py',234),
  ('call -> ID LPAREN RPAREN','call',3,'p_call','syntactic.py',240),
  ('call -> ID LPAREN function_assignments RPAREN','call',4,'p_call','syntactic.py',241),
  ('return -> attcond','return',1,'p_return','syntactic.py',246),
  ('return -> arithmetic','return',1,'p_return','syntactic.py',247),
]
