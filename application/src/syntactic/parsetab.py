
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDEQUAL BREAK CMP COLON COMMA CONTINUE DECREMENT DIVEQUAL DIVIDE DO ELSE ELSIF EQ EQUALS EXP FALSE FOR GE GT ID ID_LI ID_SC IF INCREMENT LAND LBRACE LBRACKET LE LNOT LOR LPAREN LSHIFT LSHIFTEQUAL LT MINUS MINUSEQUAL MODEQUAL MODULO NE NO NUMBER OR OREQUAL PERIOD PLUS PLUSEQUAL Q QQ QR QW QX RBRACE RBRACKET RETURN RPAREN RSHIFT RSHIFTEQUAL S SEMICOLON SEQ SGE SGT SLE SLT SNE SUB TERNARY TIMES TIMESEQUAL TR TRUE UNLESS UNTIL WHILE XOR XOREQUALinit : blockcode init\n        | function init\n        | blockcode\n        | function\n         blockcode : command\n        | command blockcode\n     command : interations\n        | if\n        | exp_assignment\n        | call\n        | RETURN return SEMICOLON\n        | BREAK SEMICOLON\n        | CONTINUE SEMICOLON\n    \n        if : IF LPAREN exp_condition RPAREN if_statement\n    \n        if_statement :  LBRACE blockcode RBRACE\n            | LBRACE blockcode RBRACE ELSE LBRACE blockcode RBRACE\n            | LBRACE blockcode RBRACE elsif\n    \n        elsif : ELSIF LPAREN exp_condition RPAREN LBRACE blockcode RBRACE\n        | ELSIF LPAREN exp_condition RPAREN LBRACE blockcode RBRACE elsif2\n    \n        elsif2 : elsif\n            | ELSE LBRACE blockcode RBRACE\n    \n       interations :  for\n       | dowhile\n       | while\n     for : FOR LPAREN for_assignments SEMICOLON exp_condition SEMICOLON for_assignments RPAREN LBRACE blockcode RBRACE for_assignments : exp_assignment\n        | exp_assignment COMMA for_assignments\n     dowhile :  DO LBRACE blockcode RBRACE WHILE LPAREN exp_condition RPAREN  while : WHILE LPAREN exp_condition RPAREN LBRACE blockcode RBRACE\n            | WHILE LPAREN exp_condition RPAREN LBRACE RBRACE\n     function : SUB ID LPAREN RPAREN LBRACE blockcode RBRACE\n        | SUB ID LPAREN function_assignments RPAREN LBRACE blockcode RBRACE\n     function_assignments : exp_assignment\n        | exp_assignment COMMA function_assignments\n    \n    exp_condition : attcond GT attcond\n            | attcond LT attcond\n            | attcond EQ attcond\n            | attcond GE attcond\n            | attcond LE attcond\n            | attcond NE attcond\n            | attcond\n            | LPAREN exp_condition RPAREN logic exp_condition_logic\n            | attcond CMP attcond\n            | attcond SEQ attcond\n            | attcond SNE attcond\n            | attcond SLT attcond\n            | attcond SGT attcond\n            | attcond SLE attcond\n            | attcond SGE attcond\n    \n        exp_condition_logic : LPAREN exp_condition RPAREN\n        | LPAREN exp_condition RPAREN logic LPAREN exp_condition RPAREN\n    \n        logic : LAND\n            | LOR\n            | LNOT\n     exp_assignment : ID_SC EQUALS arithmetic\n        | ID_LI EQUALS arithmetic\n        | ID_SC\n        | ID_LI\n        | INCREMENT ID_SC\n        | DECREMENT ID_SC\n        | ID_SC INCREMENT\n        | ID_SC DECREMENT\n    \n        arithmetic : exp\n    \n        exp : exp PLUS exp1\n            | exp MINUS exp1\n            | exp1\n    \n        exp1 : exp1 TIMES exp2\n            | exp1 DIVIDE exp2\n            | exp1 MODULO exp2\n            | exp2\n    \n    exp2 : exp3 XOR exp2\n        | exp3\n    \n    exp3 : LPAREN arithmetic RPAREN\n        | NUMBER\n        | exp_assignment\n        | exp_condition\n        | call\n        | exp\n        | TRUE\n        | FALSE\n     attcond : exp_assignment\n        | NUMBER\n        | TRUE\n        | FALSE\n    \n        call : ID LPAREN RPAREN\n            | ID LPAREN function_assignments RPAREN\n     return : attcond\n        | arithmetic\n     '
    
_lr_action_items = {'SUB':([0,2,3,4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,48,49,51,52,57,60,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,139,148,153,154,157,160,161,162,164,167,177,179,180,183,184,185,189,],[5,5,5,-5,-7,-8,-9,-10,-22,-23,-24,-57,-58,-6,-63,-66,-70,-72,-76,-77,-12,-13,-61,-62,-59,-60,-85,-11,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-14,-42,-30,-31,-15,-29,-32,-50,-17,-28,-16,-25,-51,-18,-19,-20,-21,]),'RETURN':([0,2,3,4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,48,49,51,52,54,57,60,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,132,139,140,144,146,148,153,154,157,160,161,162,164,167,169,171,177,179,180,181,183,184,185,187,189,],[11,11,11,11,-7,-8,-9,-10,-22,-23,-24,-57,-58,-6,-63,-66,-70,-72,-76,-77,-12,-13,-61,-62,-59,-60,11,-85,-11,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,11,-14,11,11,11,-42,-30,-31,-15,-29,-32,-50,-17,-28,11,11,-16,-25,-51,11,-18,-19,-20,11,-21,]),'BREAK':([0,2,3,4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,48,49,51,52,54,57,60,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,132,139,140,144,146,148,153,154,157,160,161,162,164,167,169,171,177,179,180,181,183,184,185,187,189,],[12,12,12,12,-7,-8,-9,-10,-22,-23,-24,-57,-58,-6,-63,-66,-70,-72,-76,-77,-12,-13,-61,-62,-59,-60,12,-85,-11,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,12,-14,12,12,12,-42,-30,-31,-15,-29,-32,-50,-17,-28,12,12,-16,-25,-51,12,-18,-19,-20,12,-21,]),'CONTINUE':([0,2,3,4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,48,49,51,52,54,57,60,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,132,139,140,144,146,148,153,154,157,160,161,162,164,167,169,171,177,179,180,181,183,184,185,187,189,],[13,13,13,13,-7,-8,-9,-10,-22,-23,-24,-57,-58,-6,-63,-66,-70,-72,-76,-77,-12,-13,-61,-62,-59,-60,13,-85,-11,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,13,-14,13,13,13,-42,-30,-31,-15,-29,-32,-50,-17,-28,13,13,-16,-25,-51,13,-18,-19,-20,13,-21,]),'IF':([0,2,3,4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,48,49,51,52,54,57,60,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,132,139,140,144,146,148,153,154,157,160,161,162,164,167,169,171,177,179,180,181,183,184,185,187,189,],[17,17,17,17,-7,-8,-9,-10,-22,-23,-24,-57,-58,-6,-63,-66,-70,-72,-76,-77,-12,-13,-61,-62,-59,-60,17,-85,-11,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,17,-14,17,17,17,-42,-30,-31,-15,-29,-32,-50,-17,-28,17,17,-16,-25,-51,17,-18,-19,-20,17,-21,]),'ID_SC':([0,2,3,4,7,8,9,10,11,14,15,16,18,19,20,21,27,29,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,86,87,88,89,90,91,92,93,94,95,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,132,139,140,144,146,147,148,150,151,153,154,157,160,161,162,164,167,169,170,171,172,177,179,180,181,183,184,185,187,189,],[18,18,18,18,-7,-8,-9,-10,18,-22,-23,-24,-57,-58,51,52,-6,18,-63,-66,-70,-72,18,-76,-77,-12,-13,18,18,-61,-62,18,-59,-60,18,18,18,18,-85,-11,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-41,18,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,18,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,18,18,18,-14,18,18,18,18,-42,18,18,-30,-31,-15,-29,-32,-50,-17,-28,18,18,18,18,-16,-25,-51,18,-18,-19,-20,18,-21,]),'ID_LI':([0,2,3,4,7,8,9,10,11,14,15,16,18,19,27,29,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,86,87,88,89,90,91,92,93,94,95,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,132,139,140,144,146,147,148,150,151,153,154,157,160,161,162,164,167,169,170,171,172,177,179,180,181,183,184,185,187,189,],[19,19,19,19,-7,-8,-9,-10,19,-22,-23,-24,-57,-58,-6,19,-63,-66,-70,-72,19,-76,-77,-12,-13,19,19,-61,-62,19,-59,-60,19,19,19,19,-85,-11,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-41,19,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,19,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,19,19,19,-14,19,19,19,19,-42,19,19,-30,-31,-15,-29,-32,-50,-17,-28,19,19,19,19,-16,-25,-51,19,-18,-19,-20,19,-21,]),'INCREMENT':([0,2,3,4,7,8,9,10,11,14,15,16,18,19,27,29,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,86,87,88,89,90,91,92,93,94,95,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,132,139,140,144,146,147,148,150,151,153,154,157,160,161,162,164,167,169,170,171,172,177,179,180,181,183,184,185,187,189,],[20,20,20,20,-7,-8,-9,-10,20,-22,-23,-24,48,-58,-6,20,-63,-66,-70,-72,20,-76,-77,-12,-13,20,20,-61,-62,20,-59,-60,20,20,20,20,-85,-11,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-41,20,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,20,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,20,20,20,-14,20,20,20,20,-42,20,20,-30,-31,-15,-29,-32,-50,-17,-28,20,20,20,20,-16,-25,-51,20,-18,-19,-20,20,-21,]),'DECREMENT':([0,2,3,4,7,8,9,10,11,14,15,16,18,19,27,29,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,86,87,88,89,90,91,92,93,94,95,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,132,139,140,144,146,147,148,150,151,153,154,157,160,161,162,164,167,169,170,171,172,177,179,180,181,183,184,185,187,189,],[21,21,21,21,-7,-8,-9,-10,21,-22,-23,-24,49,-58,-6,21,-63,-66,-70,-72,21,-76,-77,-12,-13,21,21,-61,-62,21,-59,-60,21,21,21,21,-85,-11,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-41,21,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,21,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,21,21,21,-14,21,21,21,21,-42,21,21,-30,-31,-15,-29,-32,-50,-17,-28,21,21,21,21,-16,-25,-51,21,-18,-19,-20,21,-21,]),'ID':([0,2,3,4,5,7,8,9,10,11,14,15,16,18,19,27,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,54,57,60,74,75,76,77,78,79,80,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,132,139,140,144,146,148,153,154,157,160,161,162,164,167,169,171,177,179,180,181,183,184,185,187,189,],[6,6,6,6,28,-7,-8,-9,-10,6,-22,-23,-24,-57,-58,-6,-63,-66,-70,-72,6,-76,-77,-12,-13,6,-61,-62,6,-59,-60,6,-85,-11,6,6,6,6,6,6,6,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,6,-14,6,6,6,-42,-30,-31,-15,-29,-32,-50,-17,-28,6,6,-16,-25,-51,6,-18,-19,-20,6,-21,]),'FOR':([0,2,3,4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,48,49,51,52,54,57,60,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,132,139,140,144,146,148,153,154,157,160,161,162,164,167,169,171,177,179,180,181,183,184,185,187,189,],[22,22,22,22,-7,-8,-9,-10,-22,-23,-24,-57,-58,-6,-63,-66,-70,-72,-76,-77,-12,-13,-61,-62,-59,-60,22,-85,-11,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,22,-14,22,22,22,-42,-30,-31,-15,-29,-32,-50,-17,-28,22,22,-16,-25,-51,22,-18,-19,-20,22,-21,]),'DO':([0,2,3,4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,48,49,51,52,54,57,60,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,132,139,140,144,146,148,153,154,157,160,161,162,164,167,169,171,177,179,180,181,183,184,185,187,189,],[23,23,23,23,-7,-8,-9,-10,-22,-23,-24,-57,-58,-6,-63,-66,-70,-72,-76,-77,-12,-13,-61,-62,-59,-60,23,-85,-11,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,23,-14,23,23,23,-42,-30,-31,-15,-29,-32,-50,-17,-28,23,23,-16,-25,-51,23,-18,-19,-20,23,-21,]),'WHILE':([0,2,3,4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,48,49,51,52,54,57,60,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,132,139,140,144,146,148,153,154,157,160,161,162,164,167,169,171,177,179,180,181,183,184,185,187,189,],[24,24,24,24,-7,-8,-9,-10,-22,-23,-24,-57,-58,-6,-63,-66,-70,-72,-76,-77,-12,-13,-61,-62,-59,-60,24,-85,-11,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,143,24,-14,24,24,24,-42,-30,-31,-15,-29,-32,-50,-17,-28,24,24,-16,-25,-51,24,-18,-19,-20,24,-21,]),'$end':([1,2,3,4,7,8,9,10,14,15,16,18,19,25,26,27,37,38,39,40,42,43,44,45,48,49,51,52,57,60,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,139,148,153,154,157,160,161,162,164,167,177,179,180,183,184,185,189,],[0,-3,-4,-5,-7,-8,-9,-10,-22,-23,-24,-57,-58,-1,-2,-6,-63,-66,-70,-72,-76,-77,-12,-13,-61,-62,-59,-60,-85,-11,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-14,-42,-30,-31,-15,-29,-32,-50,-17,-28,-16,-25,-51,-18,-19,-20,-21,]),'RBRACE':([4,7,8,9,10,14,15,16,18,19,27,37,38,39,40,42,43,44,45,48,49,51,52,57,60,83,86,87,88,89,90,91,92,93,94,95,98,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,139,144,145,148,149,152,153,155,157,160,162,164,167,173,175,177,179,180,182,183,184,185,188,189,],[-5,-7,-8,-9,-10,-22,-23,-24,-57,-58,-6,-63,-66,-70,-72,-76,-77,-12,-13,-61,-62,-59,-60,-85,-11,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,130,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-14,153,154,-42,157,160,-30,161,-15,-29,-50,-17,-28,177,179,-16,-25,-51,183,-18,-19,-20,189,-21,]),'LPAREN':([6,11,17,22,24,28,41,46,47,50,55,74,75,76,77,78,79,80,84,128,135,136,137,138,143,147,151,165,168,170,172,],[29,41,46,53,55,56,80,84,41,41,84,41,41,41,41,41,41,80,84,84,147,-52,-53,-54,151,84,84,170,172,84,84,]),'NUMBER':([11,41,46,47,50,55,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,128,147,151,170,172,],[34,34,87,91,91,87,87,87,87,87,87,87,87,87,87,87,87,87,87,91,91,91,91,91,91,34,87,87,87,87,87,87,]),'TRUE':([11,41,46,47,50,55,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,128,147,151,170,172,],[35,35,88,93,93,88,88,88,88,88,88,88,88,88,88,88,88,88,88,93,93,93,93,93,93,35,88,88,88,88,88,88,]),'FALSE':([11,41,46,47,50,55,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,128,147,151,170,172,],[36,36,89,94,94,89,89,89,89,89,89,89,89,89,89,89,89,89,89,94,94,94,94,94,94,36,89,89,89,89,89,89,]),'SEMICOLON':([12,13,18,19,30,31,32,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,83,86,87,88,89,90,91,92,93,94,95,96,97,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,141,142,148,162,180,],[44,45,-57,-58,60,-41,-88,-75,-74,-79,-80,-63,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,128,-26,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,150,-27,-42,-50,-51,]),'EQUALS':([18,19,],[47,50,]),'GT':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,61,-81,-82,-83,-84,-63,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,61,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'LT':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,62,-81,-82,-83,-84,-63,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,62,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'EQ':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,63,-81,-82,-83,-84,-63,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,63,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'GE':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,64,-81,-82,-83,-84,-63,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,64,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'LE':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,65,-81,-82,-83,-84,-63,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,65,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'NE':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,66,-81,-82,-83,-84,-63,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,66,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'CMP':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,67,-81,-82,-83,-84,-63,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,67,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'SEQ':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,68,-81,-82,-83,-84,-63,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,68,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'SNE':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,69,-81,-82,-83,-84,-63,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,69,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'SLT':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,70,-81,-82,-83,-84,-63,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,70,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'SGT':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,71,-81,-82,-83,-84,-63,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,71,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'SLE':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,72,-81,-82,-83,-84,-63,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,72,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'SGE':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,73,-81,-82,-83,-84,-63,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,73,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'XOR':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,82,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,-41,-75,-74,-79,-80,-63,-66,-70,79,-76,-77,-61,-62,-59,-60,-85,-76,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'TIMES':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,82,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,-41,-75,-74,-79,-80,-63,76,-70,-72,-76,-77,-61,-62,-59,-60,-85,-76,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,76,76,-67,-68,-69,-70,-73,-42,-50,-51,]),'DIVIDE':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,82,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,-41,-75,-74,-79,-80,-63,77,-70,-72,-76,-77,-61,-62,-59,-60,-85,-76,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,77,77,-67,-68,-69,-70,-73,-42,-50,-51,]),'MODULO':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,82,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,-41,-75,-74,-79,-80,-63,78,-70,-72,-76,-77,-61,-62,-59,-60,-85,-76,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,78,78,-67,-68,-69,-70,-73,-42,-50,-51,]),'PLUS':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,82,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,-41,-75,-74,-79,-80,74,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,-76,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,74,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'MINUS':([18,19,31,33,34,35,36,37,38,39,40,42,43,48,49,51,52,57,82,83,86,87,88,89,90,91,92,93,94,95,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,-41,-75,-74,-79,-80,75,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,-76,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,75,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'COMMA':([18,19,37,38,39,40,42,43,48,49,51,52,57,59,83,86,87,88,89,90,91,92,93,94,95,97,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,148,162,180,],[-57,-58,-63,-66,-70,-72,-76,-77,-61,-62,-59,-60,-85,103,-41,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,129,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,-42,-50,-51,]),'RPAREN':([18,19,29,33,34,35,36,37,38,39,40,42,43,48,49,51,52,56,57,58,59,81,82,83,85,86,87,88,89,90,91,92,93,94,95,97,99,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,134,142,148,156,158,159,162,174,176,180,],[-57,-58,57,-75,-74,-79,-80,-63,-66,-70,-72,-76,-77,-61,-62,-59,-60,100,-85,102,-33,124,125,-41,127,-81,-82,-83,-84,-55,-74,-75,-79,-80,-56,-26,131,133,-86,-35,-36,-37,-38,-39,-40,-43,-44,-45,-46,-47,-48,-49,-78,-64,-65,-67,-68,-69,-70,-73,125,-34,-27,-42,162,166,167,-50,178,180,-51,]),'LBRACE':([23,100,127,131,133,163,166,178,186,],[54,132,140,144,146,169,171,181,187,]),'LAND':([125,162,],[136,136,]),'LOR':([125,162,],[137,137,]),'LNOT':([125,162,],[138,138,]),'ELSE':([157,183,],[163,186,]),'ELSIF':([157,183,],[165,165,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,2,3,],[1,25,26,]),'blockcode':([0,2,3,4,54,132,140,144,146,169,171,181,187,],[2,2,2,27,98,145,149,152,155,173,175,182,188,]),'function':([0,2,3,],[3,3,3,]),'command':([0,2,3,4,54,132,140,144,146,169,171,181,187,],[4,4,4,4,4,4,4,4,4,4,4,4,4,]),'interations':([0,2,3,4,54,132,140,144,146,169,171,181,187,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'if':([0,2,3,4,54,132,140,144,146,169,171,181,187,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'exp_assignment':([0,2,3,4,11,29,41,46,47,50,53,54,55,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,103,128,129,132,140,144,146,147,150,151,169,170,171,172,181,187,],[9,9,9,9,33,59,33,86,92,92,97,9,86,59,86,86,86,86,86,86,86,86,86,86,86,86,86,92,92,92,92,92,92,33,86,59,86,97,9,9,9,9,86,97,86,9,86,9,86,9,9,]),'call':([0,2,3,4,11,41,47,50,54,74,75,76,77,78,79,80,132,140,144,146,169,171,181,187,],[10,10,10,10,43,43,43,43,10,43,43,43,43,43,43,43,10,10,10,10,10,10,10,10,]),'for':([0,2,3,4,54,132,140,144,146,169,171,181,187,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'dowhile':([0,2,3,4,54,132,140,144,146,169,171,181,187,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'while':([0,2,3,4,54,132,140,144,146,169,171,181,187,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'return':([11,],[30,]),'attcond':([11,41,46,47,50,55,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,128,147,151,170,172,],[31,83,83,83,83,83,104,105,106,107,108,109,110,111,112,113,114,115,116,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'arithmetic':([11,41,47,50,80,],[32,81,90,95,81,]),'exp':([11,41,47,50,74,75,76,77,78,79,80,],[37,37,37,37,117,117,117,117,117,117,37,]),'exp1':([11,41,47,50,74,75,76,77,78,79,80,],[38,38,38,38,118,119,38,38,38,38,38,]),'exp2':([11,41,47,50,74,75,76,77,78,79,80,],[39,39,39,39,39,39,120,121,122,123,39,]),'exp3':([11,41,47,50,74,75,76,77,78,79,80,],[40,40,40,40,40,40,40,40,40,40,40,]),'exp_condition':([11,41,46,47,50,55,74,75,76,77,78,79,80,84,128,147,151,170,172,],[42,82,85,42,42,99,42,42,42,42,42,42,82,126,141,156,159,174,176,]),'function_assignments':([29,56,103,],[58,101,134,]),'for_assignments':([53,129,150,],[96,142,158,]),'logic':([125,162,],[135,168,]),'if_statement':([127,],[139,]),'exp_condition_logic':([135,],[148,]),'elsif':([157,183,],[164,185,]),'elsif2':([183,],[184,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> blockcode init','init',2,'p_init','syntactic.py',7),
  ('init -> function init','init',2,'p_init','syntactic.py',8),
  ('init -> blockcode','init',1,'p_init','syntactic.py',9),
  ('init -> function','init',1,'p_init','syntactic.py',10),
  ('blockcode -> command','blockcode',1,'p_blockcode','syntactic.py',15),
  ('blockcode -> command blockcode','blockcode',2,'p_blockcode','syntactic.py',16),
  ('command -> interations','command',1,'p_command','syntactic.py',21),
  ('command -> if','command',1,'p_command','syntactic.py',22),
  ('command -> exp_assignment','command',1,'p_command','syntactic.py',23),
  ('command -> call','command',1,'p_command','syntactic.py',24),
  ('command -> RETURN return SEMICOLON','command',3,'p_command','syntactic.py',25),
  ('command -> BREAK SEMICOLON','command',2,'p_command','syntactic.py',26),
  ('command -> CONTINUE SEMICOLON','command',2,'p_command','syntactic.py',27),
  ('if -> IF LPAREN exp_condition RPAREN if_statement','if',5,'p_if','syntactic.py',33),
  ('if_statement -> LBRACE blockcode RBRACE','if_statement',3,'p_if_statement','syntactic.py',40),
  ('if_statement -> LBRACE blockcode RBRACE ELSE LBRACE blockcode RBRACE','if_statement',7,'p_if_statement','syntactic.py',41),
  ('if_statement -> LBRACE blockcode RBRACE elsif','if_statement',4,'p_if_statement','syntactic.py',42),
  ('elsif -> ELSIF LPAREN exp_condition RPAREN LBRACE blockcode RBRACE','elsif',7,'p_elsif','syntactic.py',48),
  ('elsif -> ELSIF LPAREN exp_condition RPAREN LBRACE blockcode RBRACE elsif2','elsif',8,'p_elsif','syntactic.py',49),
  ('elsif2 -> elsif','elsif2',1,'p_elsif2','syntactic.py',54),
  ('elsif2 -> ELSE LBRACE blockcode RBRACE','elsif2',4,'p_elsif2','syntactic.py',55),
  ('interations -> for','interations',1,'p_interations','syntactic.py',61),
  ('interations -> dowhile','interations',1,'p_interations','syntactic.py',62),
  ('interations -> while','interations',1,'p_interations','syntactic.py',63),
  ('for -> FOR LPAREN for_assignments SEMICOLON exp_condition SEMICOLON for_assignments RPAREN LBRACE blockcode RBRACE','for',11,'p_for','syntactic.py',68),
  ('for_assignments -> exp_assignment','for_assignments',1,'p_for_assignments','syntactic.py',72),
  ('for_assignments -> exp_assignment COMMA for_assignments','for_assignments',3,'p_for_assignments','syntactic.py',73),
  ('dowhile -> DO LBRACE blockcode RBRACE WHILE LPAREN exp_condition RPAREN','dowhile',8,'p_dowhile','syntactic.py',78),
  ('while -> WHILE LPAREN exp_condition RPAREN LBRACE blockcode RBRACE','while',7,'p_while','syntactic.py',82),
  ('while -> WHILE LPAREN exp_condition RPAREN LBRACE RBRACE','while',6,'p_while','syntactic.py',83),
  ('function -> SUB ID LPAREN RPAREN LBRACE blockcode RBRACE','function',7,'p_function','syntactic.py',89),
  ('function -> SUB ID LPAREN function_assignments RPAREN LBRACE blockcode RBRACE','function',8,'p_function','syntactic.py',90),
  ('function_assignments -> exp_assignment','function_assignments',1,'p_function_assignments','syntactic.py',95),
  ('function_assignments -> exp_assignment COMMA function_assignments','function_assignments',3,'p_function_assignments','syntactic.py',96),
  ('exp_condition -> attcond GT attcond','exp_condition',3,'p_exp_condition','syntactic.py',102),
  ('exp_condition -> attcond LT attcond','exp_condition',3,'p_exp_condition','syntactic.py',103),
  ('exp_condition -> attcond EQ attcond','exp_condition',3,'p_exp_condition','syntactic.py',104),
  ('exp_condition -> attcond GE attcond','exp_condition',3,'p_exp_condition','syntactic.py',105),
  ('exp_condition -> attcond LE attcond','exp_condition',3,'p_exp_condition','syntactic.py',106),
  ('exp_condition -> attcond NE attcond','exp_condition',3,'p_exp_condition','syntactic.py',107),
  ('exp_condition -> attcond','exp_condition',1,'p_exp_condition','syntactic.py',108),
  ('exp_condition -> LPAREN exp_condition RPAREN logic exp_condition_logic','exp_condition',5,'p_exp_condition','syntactic.py',109),
  ('exp_condition -> attcond CMP attcond','exp_condition',3,'p_exp_condition','syntactic.py',110),
  ('exp_condition -> attcond SEQ attcond','exp_condition',3,'p_exp_condition','syntactic.py',111),
  ('exp_condition -> attcond SNE attcond','exp_condition',3,'p_exp_condition','syntactic.py',112),
  ('exp_condition -> attcond SLT attcond','exp_condition',3,'p_exp_condition','syntactic.py',113),
  ('exp_condition -> attcond SGT attcond','exp_condition',3,'p_exp_condition','syntactic.py',114),
  ('exp_condition -> attcond SLE attcond','exp_condition',3,'p_exp_condition','syntactic.py',115),
  ('exp_condition -> attcond SGE attcond','exp_condition',3,'p_exp_condition','syntactic.py',116),
  ('exp_condition_logic -> LPAREN exp_condition RPAREN','exp_condition_logic',3,'p_exp_condition_logic','syntactic.py',123),
  ('exp_condition_logic -> LPAREN exp_condition RPAREN logic LPAREN exp_condition RPAREN','exp_condition_logic',7,'p_exp_condition_logic','syntactic.py',124),
  ('logic -> LAND','logic',1,'p_logic','syntactic.py',130),
  ('logic -> LOR','logic',1,'p_logic','syntactic.py',131),
  ('logic -> LNOT','logic',1,'p_logic','syntactic.py',132),
  ('exp_assignment -> ID_SC EQUALS arithmetic','exp_assignment',3,'p_exp_assignment','syntactic.py',137),
  ('exp_assignment -> ID_LI EQUALS arithmetic','exp_assignment',3,'p_exp_assignment','syntactic.py',138),
  ('exp_assignment -> ID_SC','exp_assignment',1,'p_exp_assignment','syntactic.py',139),
  ('exp_assignment -> ID_LI','exp_assignment',1,'p_exp_assignment','syntactic.py',140),
  ('exp_assignment -> INCREMENT ID_SC','exp_assignment',2,'p_exp_assignment','syntactic.py',141),
  ('exp_assignment -> DECREMENT ID_SC','exp_assignment',2,'p_exp_assignment','syntactic.py',142),
  ('exp_assignment -> ID_SC INCREMENT','exp_assignment',2,'p_exp_assignment','syntactic.py',143),
  ('exp_assignment -> ID_SC DECREMENT','exp_assignment',2,'p_exp_assignment','syntactic.py',144),
  ('arithmetic -> exp','arithmetic',1,'p_arithmetic','syntactic.py',150),
  ('exp -> exp PLUS exp1','exp',3,'p_exp','syntactic.py',156),
  ('exp -> exp MINUS exp1','exp',3,'p_exp','syntactic.py',157),
  ('exp -> exp1','exp',1,'p_exp','syntactic.py',158),
  ('exp1 -> exp1 TIMES exp2','exp1',3,'p_exp1','syntactic.py',164),
  ('exp1 -> exp1 DIVIDE exp2','exp1',3,'p_exp1','syntactic.py',165),
  ('exp1 -> exp1 MODULO exp2','exp1',3,'p_exp1','syntactic.py',166),
  ('exp1 -> exp2','exp1',1,'p_exp1','syntactic.py',167),
  ('exp2 -> exp3 XOR exp2','exp2',3,'p_exp2','syntactic.py',173),
  ('exp2 -> exp3','exp2',1,'p_exp2','syntactic.py',174),
  ('exp3 -> LPAREN arithmetic RPAREN','exp3',3,'p_exp3','syntactic.py',180),
  ('exp3 -> NUMBER','exp3',1,'p_exp3','syntactic.py',181),
  ('exp3 -> exp_assignment','exp3',1,'p_exp3','syntactic.py',182),
  ('exp3 -> exp_condition','exp3',1,'p_exp3','syntactic.py',183),
  ('exp3 -> call','exp3',1,'p_exp3','syntactic.py',184),
  ('exp3 -> exp','exp3',1,'p_exp3','syntactic.py',185),
  ('exp3 -> TRUE','exp3',1,'p_exp3','syntactic.py',186),
  ('exp3 -> FALSE','exp3',1,'p_exp3','syntactic.py',187),
  ('attcond -> exp_assignment','attcond',1,'p_attcond','syntactic.py',192),
  ('attcond -> NUMBER','attcond',1,'p_attcond','syntactic.py',193),
  ('attcond -> TRUE','attcond',1,'p_attcond','syntactic.py',194),
  ('attcond -> FALSE','attcond',1,'p_attcond','syntactic.py',195),
  ('call -> ID LPAREN RPAREN','call',3,'p_call','syntactic.py',201),
  ('call -> ID LPAREN function_assignments RPAREN','call',4,'p_call','syntactic.py',202),
  ('return -> attcond','return',1,'p_return','syntactic.py',207),
  ('return -> arithmetic','return',1,'p_return','syntactic.py',208),
]
