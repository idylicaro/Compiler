** First version PERL**


INIT -> ASSIGNMENT | COMMAND | FUNCTION
COMMAND -> INTERATIONS | IF | CALL
ASSIGNMENT -> TYPE IDENTIFIER = ARITHMETIC; | TYPE IDENTIFIER; | IDENTIFIER = ARITHMETIC; | IDENTIFIER | IDENTIFIER++(;)+ | IDENTIFIER--(;)+
IDENTIFIER -> [a-zA-Z][a-zA-Z0-9]*
TYPE -> int | float | char | void
IF -> if(CONDITION){BLOCK} || if(CONDITION){BLOCK}else{BLOCK} | if(CONDITION){BLOCK}else IF
INTERATIONS -> FOR | DOWHILE | WHILE 
FOR -> for([ASSIGNMENT]; [CONDITION]; [ASSIGNMENT]){BLOCK}
DOWHILE -> do{BLOCK}while(CONDITION)
WHILE -> while(CONDITION){BLOCK}
FUNCTION -> TYPE IDENTIFIER(){BLOCK} | TYPE IDENTIFIER(ASSIGNMENT[, ASSIGNMENT]*){BLOCK}
CONDITION -> ATTCOND > ATTCOND | ATTCOND < ATTCOND | ATTCOND == ATTCOND | ATTCOND >= ATTCOND | ATTCOND <= ATTCOND | ATTCOND != ATTCOND | ATTCOND | ((CONDITION) [LOGIC (CONDITION)]*)
LOGIC -> && | ||
ATTCOND -> IDENTIFIER | NUMBER | true | false
BLOCK -> ASSIGNMENT; | return RETURN; | break;
RETURN -> IDENTIFIER | ARITHMETIC
ARITHMETIC -> EXP + EXP | EXP - EXP | EXP * EXP | EXP / EXP | EXP | EXP -> NUMBER | ( ARITHMETIC )
NUMBER -> CINTEGER | CFLOAT | CDOUBLE